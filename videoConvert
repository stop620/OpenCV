#include "opencv2/opencv.hpp"
#include <iostream>

using namespace std;
using namespace cv;

void main()
{
	VideoCapture cap("videos/stopwatch.avi");

	if (!cap.isOpened()) {
		cerr << "Camera open failed!" << endl;
		return;
	}

	int w = cvRound(cap.get(CAP_PROP_FRAME_WIDTH));
	int h = cvRound(cap.get(CAP_PROP_FRAME_HEIGHT));
	double fps = cap.get(CAP_PROP_FPS);
	
	cout << "FPS: " << fps << endl;

	int fourcc = VideoWriter::fourcc('D', 'I', 'V', 'X');
	int delay = cvRound(1000 / fps);

	VideoWriter outputVideo("videos/output.avi", fourcc, fps, Size(w, h));

	Mat frame, inversed;
	while (true) {
		cap >> frame;
		if (frame.empty())
			break;

		inversed = frame.clone();

		for (int j = 0; j < inversed.rows; j++) {
			for (int i = 0; i < inversed.cols; i++) {
				Vec3b p = inversed.at<Vec3b>(j, i);
				inversed.at<Vec3b>(j, i)[0] = p[2];
				inversed.at<Vec3b>(j, i)[1] = p[0];
				inversed.at<Vec3b>(j, i)[2] = p[1];
			}
		}
		outputVideo << inversed;

		imshow("frame", frame);
		imshow("inversed", inversed);

		if (waitKey(delay) == 27)
			break;
	}

	destroyAllWindows();
}
